// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTracker2.Model;

#nullable disable

namespace WorkoutTracker2.Migrations
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20240918193633_AddBodyWeightTable")]
    partial class AddBodyWeightTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("WorkoutTracker2.Model.BodyWeight", b =>
                {
                    b.Property<int>("BodyWeightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("BodyWeightId");

                    b.ToTable("BodyWeights");
                });

            modelBuilder.Entity("WorkoutTracker2.Model.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBodyWeight")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWeightPerLimb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercises", (string)null);
                });

            modelBuilder.Entity("WorkoutTracker2.Model.RepWeight", b =>
                {
                    b.Property<int>("RepWeightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("RepWeightId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("RepWeights", (string)null);
                });

            modelBuilder.Entity("WorkoutTracker2.Model.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutId");

                    b.ToTable("Workouts", (string)null);
                });

            modelBuilder.Entity("WorkoutTracker2.Model.Exercise", b =>
                {
                    b.HasOne("WorkoutTracker2.Model.Workout", "Workout")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutTracker2.Model.RepWeight", b =>
                {
                    b.HasOne("WorkoutTracker2.Model.Exercise", "Exercise")
                        .WithMany("SetData")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("WorkoutTracker2.Model.Exercise", b =>
                {
                    b.Navigation("SetData");
                });

            modelBuilder.Entity("WorkoutTracker2.Model.Workout", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
